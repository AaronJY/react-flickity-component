{"version":3,"sources":["../src/index.js"],"names":["FlickityComponent","props","state","selectedIndex","carousel","flkty","updateSelected","bind","imagesLoaded","index","setState","onSwipe","off","destroy","disableImagesLoaded","instance","reloadCells","options","on","createElement","elementType","className","ref","c","children","propTypes","bool","object","string","array","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;IAEMA,iB;;;AAEJ,6BAAaC,KAAb,EAAoB;AAAA;;AAAA,sIACZA,KADY;;AAGlB,UAAKC,KAAL,GAAa;AACXC,qBAAe;AADJ,KAAb;;AAIA,UAAKC,QAAL,GAAgB,IAAhB;AACA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAVkB;AAWnB;;;;qCAEiB;AAChB,UAAME,QAAQ,KAAKJ,KAAL,CAAWF,aAAzB;AACA,WAAKO,QAAL,CAAc;AACZP,uBAAeM;AADH,OAAd;AAGA,UAAI,KAAKR,KAAL,CAAWU,OAAf,EAAwB;AACtB,aAAKV,KAAL,CAAWU,OAAX,CAAmBF,KAAnB;AACD;AACF;;;2CAEuB;AACtB,UAAI,KAAKJ,KAAT,EAAgB;AACd,aAAKA,KAAL,CAAWO,GAAX,CAAe,YAAf,EAA6B,KAAKN,cAAlC;AACA,aAAKD,KAAL,CAAWQ,OAAX;AACD;AACF;;;mCAEe;AACd,UAAI,CAAC,KAAKZ,KAAL,CAAWa,mBAAZ,mCAAJ,EAAkD;AAChD,oCACE,KAAKV,QADP,EAEE,UAAUW,QAAV,EAAoB;AAClB,eAAKV,KAAL,CAAWW,WAAX;AACD,SAFD,CAEET,IAFF,CAEO,IAFP,CAFF;AAMD;AACF;;;wCAEoB;AACnB,UAAMH,WAAW,KAAKA,QAAtB;AACA,2CAAe;AACb,aAAKC,KAAL,GAAa,uBAAaD,QAAb,EAAuB,KAAKH,KAAL,CAAWgB,OAAlC,CAAb;AACA,aAAKZ,KAAL,CAAWa,EAAX,CAAc,YAAd,EAA4B,KAAKZ,cAAjC;AACA,aAAKE,YAAL;AACD;AACF;;;6BAES;AAAA;;AACR,aAAO,gBAAMW,aAAN,CAAoB,KAAKlB,KAAL,CAAWmB,WAA/B,EAA4C;AACjDC,mBAAW,KAAKpB,KAAL,CAAWoB,SAD2B;AAEjDC,aAAK,aAACC,CAAD,EAAO;AAAE,iBAAKnB,QAAL,GAAgBmB,CAAhB;AAAmB;AAFgB,OAA5C,EAGJ,KAAKtB,KAAL,CAAWuB,QAHP,CAAP;AAID;;;;;;AAGHxB,kBAAkByB,SAAlB,GAA8B;AAC5BX,uBAAqB,oBAAUY,IADH;AAE5BT,WAAS,oBAAUU,MAFS;AAG5BN,aAAW,oBAAUO,MAHO;AAI5BR,eAAa,oBAAUQ,MAJK;AAK5BJ,YAAU,oBAAUK,KALQ;AAM5BlB,WAAS,oBAAUmB;AANS,CAA9B;;AASA9B,kBAAkB+B,YAAlB,GAAiC;AAC/BjB,uBAAqB,KADU;AAE/BG,WAAS,EAFsB;AAG/BI,aAAW,EAHoB;AAI/BD,eAAa;AAJkB,CAAjC;;kBAOepB,iB","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport Flickity from 'flickity'\nimport imagesloaded from 'imagesloaded'\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment'\nimport PropTypes from 'prop-types'\n\nclass FlickityComponent extends Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      selectedIndex: 0\n    }\n\n    this.carousel = null\n    this.flkty = null\n    this.updateSelected = this.updateSelected.bind(this)\n    this.imagesLoaded = this.imagesLoaded.bind(this)\n  }\n\n  updateSelected () {\n    const index = this.flkty.selectedIndex\n    this.setState({\n      selectedIndex: index\n    })\n    if (this.props.onSwipe) {\n      this.props.onSwipe(index)\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.flkty) {\n      this.flkty.off('cellSelect', this.updateSelected)\n      this.flkty.destroy()\n    }\n  }\n\n  imagesLoaded () {\n    if (!this.props.disableImagesLoaded && canUseDOM) {\n      imagesloaded(\n        this.carousel,\n        function (instance) {\n          this.flkty.reloadCells()\n        }.bind(this)\n      )\n    }\n  }\n\n  componentDidMount () {\n    const carousel = this.carousel\n    if (canUseDOM) {\n      this.flkty = new Flickity(carousel, this.props.options)\n      this.flkty.on('cellSelect', this.updateSelected)\n      this.imagesLoaded()\n    }\n  }\n\n  render () {\n    return React.createElement(this.props.elementType, {\n      className: this.props.className,\n      ref: (c) => { this.carousel = c }\n    }, this.props.children)\n  }\n}\n\nFlickityComponent.propTypes = {\n  disableImagesLoaded: PropTypes.bool,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  elementType: PropTypes.string,\n  children: PropTypes.array,\n  onSwipe: PropTypes.func\n}\n\nFlickityComponent.defaultProps = {\n  disableImagesLoaded: false,\n  options: {},\n  className: '',\n  elementType: 'div'\n}\n\nexport default FlickityComponent\n"]}